<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="customLoginSuccess" class="com.luck.security.CustomLoginSuccessHandler"></bean>
	<bean id="customAccessDenied" class="com.luck.security.CustomAccessDeniedHandler"></bean>
	<!-- <bean id="customPasswordEncoder" class="org.zerock.security.CustomNoOpPasswordEncoder"></bean> -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<bean id="customUserDetailsService"	class="com.luck.security.CustomUserDetailsService"></bean>
	
	<security:http>
		<!-- <security:intercept-url pattern="/sample2/all" access="permitAll"/>
		<security:intercept-url pattern="/sample2/member" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/sample2/admin" access="hasRole('ROLE_ADMIN')"/> -->
		
		<!-- <security:access-denied-handler error-page="/accessError" /> -->
		<security:access-denied-handler ref="customAccessDenied" />
	
		<security:form-login login-page="/member/customLogin" authentication-success-handler-ref="customLoginSuccess"/>
		
		<security:logout logout-url="/member/customLogout" invalidate-session="true" delete-cookies="remember-me,JSESSIONID,JSESSION_ID"/>
		
		<!-- csrf토큰 사용안하기 -->
	<!-- 	<security:csrf disabled="true"/> -->
		
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/>
		
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
			<!-- <security:user-service>
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
				<security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN,ROLE_MEMBER"/>
			</security:user-service> -->
			
		<!-- 	<security:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select userid,userpw,enabled from tbl_member where userid=?" 
				authorities-by-username-query="select userid,auth from tbl_member_auth where userid=?"			
			/> -->
			
			
			<security:password-encoder ref="bcryptPasswordEncoder" />
		
		</security:authentication-provider>
	
	</security:authentication-manager>
</beans>